package com.example.libraries;

import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;
import org.example.libraries.LibrariesDb;

/**
 * This class was generated by Apache CXF 4.0.5
 * 2025-02-22T13:16:29.833+01:00
 * Generated source version: 4.0.5
 *
 */
@javax.xml.ws.WebServiceClient(name = "LibrariesDbEndpointService",
                  wsdlLocation = "file:/C:/Users/eweli/Desktop/AZNU-projekt-ET/library_client/src/main/resources/libraries.wsdl",
                  targetNamespace = "http://libraries.example.com/")
public class LibrariesDbEndpointService extends javax.xml.ws.Service {

    public static final URL WSDL_LOCATION;

    public static final QName SERVICE = new QName("http://libraries.example.com/", "LibrariesDbEndpointService");
    public static final QName LibrariesDbEndpointPort = new QName("http://libraries.example.com/", "LibrariesDbEndpointPort");
    static {
        URL url = null;
        try {
            url = URI.create("file:/C:/Users/eweli/Desktop/AZNU-projekt-ET/library_client/src/main/resources/libraries.wsdl").toURL();
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(LibrariesDbEndpointService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/eweli/Desktop/AZNU-projekt-ET/library_client/src/main/resources/libraries.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public LibrariesDbEndpointService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public LibrariesDbEndpointService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public LibrariesDbEndpointService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public LibrariesDbEndpointService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public LibrariesDbEndpointService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public LibrariesDbEndpointService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns LibrariesDb
     */
    @WebEndpoint(name = "LibrariesDbEndpointPort")
    public LibrariesDb getLibrariesDbEndpointPort() {
        return super.getPort(LibrariesDbEndpointPort, LibrariesDb.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LibrariesDb
     */
    @WebEndpoint(name = "LibrariesDbEndpointPort")
    public LibrariesDb getLibrariesDbEndpointPort(WebServiceFeature... features) {
        return super.getPort(LibrariesDbEndpointPort, LibrariesDb.class, features);
    }

}
